{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "22a631b6-9cf8-41fe-96a7-be2dbb85cbc1",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from datetime import timedelta\n",
    "\n",
    "delta = timedelta(\n",
    "     days=50,\n",
    "     seconds=27,\n",
    "     microseconds=10,\n",
    "     milliseconds=29000,\n",
    "     minutes=5,\n",
    "     hours=8,\n",
    "     weeks=2\n",
    ")\n",
    "\n",
    "TFData = pd.read_csv('C:/Users/johnf/OneDrive/Documents/FogMonitor/Data/June21.csv')\n",
    "DSData = pd.read_csv('C:/Users/johnf/OneDrive/Documents/FogMonitor/Data/DS_June2021.csv')\n",
    "\n",
    "\n",
    "new_header = DSData.iloc[0] \n",
    "DSData = DSData[1:]\n",
    "DSData.columns = new_header\n",
    "\n",
    "TFData[\"Time\"] = pd.to_datetime(TFData[\"datetime\"])\n",
    "DSData[\"date time\"] = pd.to_datetime(DSData[\"date time\"])\n",
    "\n",
    "CompData = pd.DataFrame()\n",
    "\n",
    "CompData[\"B_Ext\"] = \"\"\n",
    "CompData[\"B_Time\"] = \"\"\n",
    "CompData[\"B_Humid\"] = \"\"\n",
    "CompData[\"TFTime\"] = TFData[\"Time\"]\n",
    "CompData[\"TFValue\"] = TFData[\"data\"]\n",
    "CompData[\"TDiff\"] = \"\"\n",
    "\n",
    "CompData[\"B_Time\"] = pd.to_datetime(CompData[\"B_Time\"])\n",
    "CompData[\"TFTime\"] = pd.to_datetime(CompData[\"TFTime\"])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "a7ccaf2d-4916-4076-970d-05839f76a193",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>B_Ext</th>\n",
       "      <th>B_Time</th>\n",
       "      <th>B_Humid</th>\n",
       "      <th>TFTime</th>\n",
       "      <th>TFValue</th>\n",
       "      <th>TDiff</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-06-01 00:01:00</td>\n",
       "      <td>80</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-06-01 00:18:00</td>\n",
       "      <td>81</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-06-01 00:34:00</td>\n",
       "      <td>88</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-06-01 00:50:00</td>\n",
       "      <td>82</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-06-01 01:07:00</td>\n",
       "      <td>82</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  B_Ext B_Time B_Humid              TFTime  TFValue TDiff\n",
       "0   NaN    NaT     NaN 2021-06-01 00:01:00       80      \n",
       "1   NaN    NaT     NaN 2021-06-01 00:18:00       81      \n",
       "2   NaN    NaT     NaN 2021-06-01 00:34:00       88      \n",
       "3   NaN    NaT     NaN 2021-06-01 00:50:00       82      \n",
       "4   NaN    NaT     NaN 2021-06-01 01:07:00       82      "
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "CompData.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "fd6de078-3f32-4377-888f-09ad641d4d98",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date time</th>\n",
       "      <th>RH (%)</th>\n",
       "      <th>temp (C)</th>\n",
       "      <th>LWC counter</th>\n",
       "      <th>rain (mm)</th>\n",
       "      <th>visibility (km)</th>\n",
       "      <th>vis std dev (km)</th>\n",
       "      <th>NaN</th>\n",
       "      <th>bext (1/km)</th>\n",
       "      <th>NaN</th>\n",
       "      <th>VCNL1</th>\n",
       "      <th>VCNL2</th>\n",
       "      <th>VCNL3</th>\n",
       "      <th>VCNL4</th>\n",
       "      <th>VCNL5</th>\n",
       "      <th>VCNL6</th>\n",
       "      <th>NaN</th>\n",
       "      <th>NaN</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2021-06-01 00:00:00</td>\n",
       "      <td>89.9</td>\n",
       "      <td>9.96</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>59.914</td>\n",
       "      <td>3.7267</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.05007177</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2021-06-01 00:05:00</td>\n",
       "      <td>91.8</td>\n",
       "      <td>10.06</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>72.287</td>\n",
       "      <td>4.1347</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.041501238</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2021-06-01 00:10:00</td>\n",
       "      <td>88.9</td>\n",
       "      <td>10.31</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>73.35</td>\n",
       "      <td>11.228</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.040899796</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2021-06-01 00:15:00</td>\n",
       "      <td>89.3</td>\n",
       "      <td>9.99</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>62.618</td>\n",
       "      <td>5.0937</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.047909547</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2021-06-01 00:20:00</td>\n",
       "      <td>91.6</td>\n",
       "      <td>9.96</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>72.136</td>\n",
       "      <td>2.1146</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.041588111</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "0           date time RH (%) temp (C)  LWC counter rain (mm) visibility (km)  \\\n",
       "1 2021-06-01 00:00:00   89.9      9.96           0         0          59.914   \n",
       "2 2021-06-01 00:05:00   91.8     10.06           0         0          72.287   \n",
       "3 2021-06-01 00:10:00   88.9     10.31           0         0           73.35   \n",
       "4 2021-06-01 00:15:00   89.3      9.99           0         0          62.618   \n",
       "5 2021-06-01 00:20:00   91.6      9.96           0         0          72.136   \n",
       "\n",
       "0 vis std dev (km) NaN  bext (1/km) NaN VCNL1 VCNL2 VCNL3 VCNL4 VCNL5 VCNL6  \\\n",
       "1           3.7267 NaN   0.05007177 NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "2           4.1347 NaN  0.041501238 NaN     0     0     0     0     0     0   \n",
       "3           11.228 NaN  0.040899796 NaN     0     0     0     0     0     0   \n",
       "4           5.0937 NaN  0.047909547 NaN     0     0     0     0     0     0   \n",
       "5           2.1146 NaN  0.041588111 NaN     0     0     0     0     0     0   \n",
       "\n",
       "0 NaN  NaN  \n",
       "1 NaN  NaN  \n",
       "2 NaN  NaN  \n",
       "3 NaN  NaN  \n",
       "4 NaN  NaN  \n",
       "5 NaN  NaN  "
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DSData.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "65634f7e-7af8-4477-84d1-94649b9fe3b7",
   "metadata": {},
   "outputs": [],
   "source": [
    "def CompTime(b_time, t_time):\n",
    "    tdiff = abs(b_time - t_time)\n",
    "    return tdiff"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3f4f5e9f-342b-44eb-b3e7-79009fe8d05d",
   "metadata": {},
   "outputs": [],
   "source": [
    "%%time\n",
    "factor = 100 \n",
    "start = 0\n",
    "for x in range(0, CompData.shape[0]):\n",
    "    prevtime = delta\n",
    "    #print(TFData.iloc[x,2])  \n",
    "    for y in range(0, DSData.shape[0]):\n",
    "        thistime = CompTime(CompData.iloc[x,3], DSData.iloc[y,0])\n",
    "        if thistime < prevtime:\n",
    "            prevtime = thistime\n",
    "            CompData.iloc[x,0] = DSData.iloc[y,8] ##Bring over timestamp\n",
    "            CompData.iloc[x,1] = DSData.iloc[y,0] ##Bring over bext\n",
    "            CompData.iloc[x,2] = DSData.iloc[y,1] ##Bring over bext\n",
    "            CompData.iloc[x,5] = thistime ##save time delta"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "784347c8-e11e-487e-84a2-72a499abfece",
   "metadata": {},
   "outputs": [],
   "source": [
    "CompData.to_csv(\"C:/Users/johnf/OneDrive/Documents/FogMonitor/Data/out.csv\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
